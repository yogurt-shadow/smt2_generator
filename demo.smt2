(set-logic QF_NRA)

(declare-const v0 Real)
(declare-const v1 Real)
(declare-const v2 Real)
(declare-const v3 Real)

(assert (or (< (+ (* 32 v1) (* ( - 51) v3) (* 33 v1) (* 77 v3) (* 70 v1) (* ( - 99) v1) (* ( - 23) v1) (* ( - 13) v1) ( - 60)) 0) (< (+ (* 32 (* v3 v3) (* v1 v1)) (* ( - 68) (* v3 v3 v3) v1) (* 77 (* v1 v1)) (* 89 (* v3 v3)) (* ( - 37) (* v3 v3 v3) v1) (* ( - 10) v3 v1) ( - 74)) 0) (< (+ (* ( - 23) v3) (* ( - 40) v3) (* 32 v3) (* 26 v1) (* ( - 94) v3) (* ( - 77) v3) (* 48 v1) (* 16 v1) ( - 35)) 0) (< (+ (* 36 (* v3 v3 v3)) (* 17 v3) (* ( - 68) v1) (* 48 v3) (* ( - 39) v3 (* v1 v1)) (* ( - 87) v1) (* 56 v1) 53) 0)))
(assert (or (< (+ (* 6 v3) (* ( - 68) v3) (* 43 v3) (* ( - 40) v3) (* 72 v3) (* ( - 63) v3) (* 67 v3) ( - 88)) 0) (> (+ (* ( - 36) (* v3 v3 v3)) (* 49 (* v3 v3)) (* 89 (* v3 v3 v3)) (* ( - 86) v3) (* ( - 90) (* v3 v3)) (* ( - 75) (* v3 v3)) (* 81 (* v3 v3 v3)) (* 50 v3) ( - 95)) 0) (> (+ (* 37 (* v3 v3)) (* 91 (* v3 v3)) (* ( - 68) v3) (* 37 (* v3 v3)) (* 96 v3) (* ( - 76) v3) 34) 0) (< (+ (* ( - 1) v3) (* ( - 22) v3) 22) 0) (< (+ (* ( - 28) (* v3 v3 v3)) (* 77 v3) 41) 0)))
(assert (or (< (+ (* ( - 7) (* v1 v1 v1)) (* 35 (* v1 v1 v1)) (* ( - 58) (* v1 v1)) (* ( - 13) v1) (* ( - 4) v1) (* 28 (* v1 v1 v1)) (* ( - 97) (* v1 v1 v1)) 74) 0) (> (+ (* 66 (* v1 v1)) (* ( - 24) (* v1 v1)) (* ( - 42) (* v1 v1)) 9) 0)))
(assert (or (> (+ (* 29 (* v3 v3 v3 v3)) (* ( - 99) (* v3 v3)) (* ( - 20) (* v3 v3)) (* 40 (* v3 v3)) (* ( - 33) (* v3 v3)) (* ( - 50) (* v3 v3 v3)) 35) 0) (> (+ (* ( - 4) (* v3 v3)) (* ( - 50) (* v3 v3)) 66) 0) (> (+ (* ( - 1) (* v3 v3 v3)) (* 35 v3) (* 28 (* v3 v3)) (* ( - 33) (* v3 v3)) (* 51 (* v3 v3)) (* ( - 70) (* v3 v3 v3)) 40) 0) (= (+ (* 0 (* v3 v3)) (* ( - 51) v3) (* ( - 26) v3) (* ( - 62) v3) (* ( - 21) v3) (* 20 (* v3 v3)) (* 73 (* v3 v3)) (* ( - 50) (* v3 v3)) 23) 0)))
(assert (or (< (+ (* 18 v2) (* 4 v0) (* ( - 29) v2) 55) 0) (> (+ (* 27 (* v2 v2 v2 v2)) 77) 0)))
(assert (or (< (+ (* 71 v2) (* ( - 19) v0) (* 82 v2) (* ( - 55) v2) (* ( - 27) v2) (* 33 v2) (* ( - 73) v0) ( - 97)) 0) (< (+ (* 81 (* v0 v0)) 69) 0) (> (+ (* ( - 29) v0 (* v2 v2)) (* ( - 27) v0 v2) (* 95 (* v0 v0)) (* ( - 72) v0) (* ( - 88) (* v0 v0)) 83) 0) (= (+ (* 71 (* v0 v0) v2) (* 28 v0 (* v2 v2)) (* ( - 52) v0 v2) (* ( - 23) v0) (* ( - 18) (* v2 v2)) ( - 22)) 0)))
(assert (or (< (+ (* 38 (* v2 v2)) (* ( - 34) (* v1 v1)) (* ( - 98) v0 v1) ( - 34)) 0) (> (+ (* ( - 27) (* v3 v3 v3)) (* ( - 10) v3) ( - 52)) 0) (< (+ (* 94 v2 v0 v3) ( - 86)) 0) (> (+ (* ( - 70) v0 (* v1 v1)) (* 97 v0) (* ( - 44) v0 v1) 86) 0) (> (+ (* ( - 74) v2 v0 v3) ( - 73)) 0)))
(assert (or (< (+ (* 72 v0) (* 80 v0) (* ( - 4) v0) (* 55 v0) (* ( - 67) v2) (* 34 v2) (* 52 v3) (* 81 v2) ( - 21)) 0) (> (+ (* ( - 30) v0) (* 25 v2) (* ( - 74) v2) ( - 28)) 0) (< (+ (* ( - 65) v0 v3) (* 32 v2) (* ( - 79) v0 v3) (* ( - 10) v0 v2) (* ( - 54) v2 v3) (* 18 v0 v2) (* 78 v0 v3) ( - 37)) 0)))
(assert (or (< (+ (* 93 v3) (* ( - 74) v3) (* ( - 62) v3) (* ( - 83) v3) (* ( - 5) v3) (* 64 v3) (* 53 v3) 26) 0) (< (+ (* 53 (* v3 v3 v3 v3)) (* ( - 87) (* v3 v3)) (* 77 (* v3 v3 v3)) (* ( - 44) v3) (* 57 (* v3 v3 v3)) (* 38 v3) 63) 0) (< (+ (* 83 (* v3 v3 v3)) (* ( - 66) v3) (* ( - 14) (* v3 v3)) 84) 0)))
(assert (or (> (+ (* 79 (* v1 v1)) (* 38 v1) (* ( - 86) v3) (* 23 v1) (* 75 v3) 74) 0) (< (+ (* 85 v1) 19) 0) (> (+ (* 92 v3) (* ( - 52) v1) (* 56 v0) (* ( - 67) v1) (* ( - 68) v1) (* ( - 30) v2) (* 73 v1) (* 29 v3) ( - 36)) 0) (< (+ (* 93 (* v1 v1) v3) (* 84 v2) (* 68 v1 (* v2 v2)) (* 6 v1 v2) (* 89 (* v3 v3)) (* ( - 95) v3) (* 8 (* v0 v0)) (* ( - 97) v1 v3 v2) ( - 7)) 0) (< (+ (* ( - 94) v3) (* 80 v0) (* 36 v1) (* ( - 11) v3) (* ( - 28) v3) (* 30 v1) (* 60 v1) ( - 20)) 0)))
(assert (or (< (+ (* ( - 98) v2 v1 (* v0 v0)) (* ( - 21) v1) (* 17 v2 v1 v0) (* 97 (* v2 v2 v2) v1) (* 45 v1 v0) (* ( - 67) (* v2 v2 v2)) (* 73 v1) (* ( - 100) v2) ( - 73)) 0) (> (+ (* 18 v2 v1 v0) ( - 15)) 0) (> (+ (* 42 (* v1 v1)) (* 31 (* v1 v1)) (* ( - 28) v2 v0) (* 37 v2 v0) (* ( - 14) (* v0 v0)) (* 34 v1 v0) 57) 0) (< (+ (* 6 (* v1 v1 v1)) (* 44 (* v1 v1)) 10) 0)))

(check-sat)
(exit)